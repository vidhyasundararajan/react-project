{"ast":null,"code":"var _jsxFileName = \"/Users/suvidhya/myfirstreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Autocomplete from './react-autocomplete';\nimport TextField from '../node_modules/react-textfield';\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myTextHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n\n      if (val === \"MR\") {\n        this.setState({\n          male: true\n        });\n        this.setState({\n          female: false\n        });\n      } else if (val === \"MS\") {\n        this.setState({\n          female: true\n        });\n        this.setState({\n          male: false\n        });\n      } else if (val === \"MRS\") {\n        this.setState({\n          female: true\n        });\n        this.setState({\n          male: false\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n\n      if (nam === \"age\") {\n        if (!Number(val)) {\n          alert(\"Your age must be a number\");\n        }\n      }\n\n      this.setState({\n        [nam]: val\n      });\n      this.setState({\n        [nam]: 10\n      });\n    };\n\n    this.mydobHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      var today = new Date();\n      var birthDate = new Date(val);\n      var age1 = today.getFullYear() - birthDate.getFullYear();\n      var m = today.getMonth() - birthDate.getMonth();\n\n      if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n        age1 = age1 - 1;\n      }\n\n      this.setState({\n        age: age1\n      });\n    };\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      alert(\"You are submitting \" + this.state.username);\n    };\n\n    this.state = {\n      username: '',\n      age: null,\n      aadhar: '',\n      male: null,\n      female: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Personal information:\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Hello \", this.state.username, \" \", this.state.age), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Enter your name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"salutation\",\n      maxlength: \"4\",\n      size: \"4\",\n      onChange: this.myTextHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Gender:\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: \"male\",\n      checked: this.state.male,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \" Male\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: \"female\",\n      checked: this.state.female,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \" Female\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Enter your DOB:\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"bday\",\n      onChange: this.mydobHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Enter your age:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"age\",\n      onChange: this.myChangeHandler,\n      value: this.state.age,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Enter your AppoinmentDate:\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"appointmentdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Enter your AadharNumber:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"aadhar\",\n      value: this.state.aadhar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      value: this.state.value,\n      inputProps: {\n        id: 'states-autocomplete'\n      },\n      wrapperStyle: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      items: getStocks(),\n      getItemValue: item => item.name,\n      shouldItemRender: matchStocks,\n      onChange: (event, value) => this.setState({\n        value\n      }),\n      onSelect: value => this.setState({\n        value\n      }),\n      renderMenu: children => React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, children),\n      renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n        className: `item ${isHighlighted ? 'item-highlighted' : ''}`,\n        key: item.abbr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, item.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(MyForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/suvidhya/myfirstreact/src/index.js"],"names":["React","ReactDOM","serviceWorker","Autocomplete","TextField","MyForm","Component","constructor","props","myTextHandler","event","nam","target","name","val","value","setState","male","female","myChangeHandler","Number","alert","mydobHandler","today","Date","birthDate","age1","getFullYear","m","getMonth","getDate","age","mySubmitHandler","preventDefault","state","username","aadhar","render","id","position","display","getStocks","item","matchStocks","children","isHighlighted","abbr","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Autocomplete from './react-autocomplete';\nimport TextField from '../node_modules/react-textfield';\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      age: null,\n      aadhar: '',\n      male: null,\n      female: null\n    };\n  }\n  myTextHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    if (val === \"MR\") {\n        this.setState({\n          male: true \n        });\n        this.setState({\n          female: false \n        });\n    }\n    else if (val === \"MS\") {\n        this.setState({\n          female: true \n        });\n        this.setState({\n          male: false \n        });\n    }\n    else if (val === \"MRS\") {\n        this.setState({\n          female: true \n        });\n        this.setState({\n          male: false \n        });\n    }\n  }\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    if (nam === \"age\") {\n      if (!Number(val)) {\n        alert(\"Your age must be a number\");\n      }\n    }\n    this.setState({[nam]: val});\n    this.setState({[nam]: 10});\n  }\n  mydobHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    var today = new Date();\n    var birthDate = new Date(val);\n    var age1 = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age1 = age1 - 1;\n    }\n    this.setState({\n      age: age1 \n    });\n  }\n   mySubmitHandler = (event) => {\n    event.preventDefault();\n    alert(\"You are submitting \" + this.state.username);\n  }\n  render() {\n    return (\n      <form onSubmit={this.mySubmitHandler}>\n      <fieldset>\n      <legend>Personal information:</legend>\n      <h1>Hello {this.state.username} {this.state.age}</h1>\n      \n      <p>Enter your name:</p>\n      <input type=\"text\" name=\"salutation\" maxlength=\"4\" size=\"4\" onChange={this.myTextHandler}/> \n      <input\n        type='text'\n        name='username'\n        onChange={this.myChangeHandler}\n      />\n      <p>Gender:</p>\n      <input type=\"radio\" name=\"gender\" value=\"male\" checked={this.state.male}/> Male\n      <input type=\"radio\" name=\"gender\" value=\"female\" checked={this.state.female}/> Female\n      <p>Enter your DOB:</p>\n      <input\n        type='date'\n        name='bday'\n        onChange={this.mydobHandler}\n      />\n      <p>Enter your age:</p>\n      <input\n        type='text'\n        name='age'\n        onChange={this.myChangeHandler}\n        value={this.state.age}\n        readOnly={true}\n      />\n      <p>Enter your AppoinmentDate:</p>\n      <input\n        type='date'\n        name='appointmentdate'\n      />\n      <p>Enter your AadharNumber:</p>\n      <input\n        type='text'\n        name='aadhar'\n        value={this.state.aadhar}\n      />\n\n      <Autocomplete\n          value={ this.state.value }\n          inputProps={{ id: 'states-autocomplete' }}\n          wrapperStyle={{ position: 'relative', display: 'inline-block' }}\n          items={ getStocks() }\n          getItemValue={ item => item.name }\n          shouldItemRender={ matchStocks }\n          onChange={(event, value) => this.setState({ value }) }\n          onSelect={ value => this.setState({ value }) }\n          renderMenu={ children => (\n            <div className = \"menu\">\n              { children }\n            </div>\n          )}\n          renderItem={ (item, isHighlighted) => (\n            <div\n              className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\n              key={ item.abbr } >\n              { item.name }\n            </div>\n          )}\n        />\n      <input\n        type='submit'\n      />\n      </fieldset>\n      </form>\n    );\n  }\n}\n\nReactDOM.render(<MyForm />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}