{"ast":null,"code":"var _jsxFileName = \"/Users/suvidhya/myfirstreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myTextHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      alert(val);\n\n      if (val.toUpperCase === \"MR\") {\n        this.setState({\n          gender: true\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n\n      if (nam === \"age\") {\n        if (!Number(val)) {\n          alert(\"Your age must be a number\");\n        }\n      }\n\n      this.setState({\n        [nam]: val\n      });\n      this.setState({\n        [nam]: 10\n      });\n    };\n\n    this.mydobHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      var today = new Date();\n      var birthDate = new Date(val);\n      var age1 = today.getFullYear() - birthDate.getFullYear();\n      this.setState({\n        age: age1\n      });\n    };\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      alert(\"You are submitting \" + this.state.username);\n    };\n\n    this.state = {\n      username: '',\n      age: null,\n      aadhar: '',\n      gender: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Personal information:\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Hello \", this.state.username, \" \", this.state.age), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Enter your name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"salutation\",\n      maxlength: \"4\",\n      size: \"4\",\n      onChange: this.myTextHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Gender:\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: \"male\",\n      checked: this.state.gender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \" Male\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" Female\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Enter your DOB:\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"bday\",\n      onChange: this.mydobHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Enter your age:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"age\",\n      onChange: this.myChangeHandler,\n      value: this.state.age,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Enter your AppoinmentDate:\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"appointmentdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Enter your AadharNumber:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"aadhar\",\n      value: this.state.aadhar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(MyForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/suvidhya/myfirstreact/src/index.js"],"names":["React","ReactDOM","serviceWorker","MyForm","Component","constructor","props","myTextHandler","event","nam","target","name","val","value","alert","toUpperCase","setState","gender","myChangeHandler","Number","mydobHandler","today","Date","birthDate","age1","getFullYear","age","mySubmitHandler","preventDefault","state","username","aadhar","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      age: null,\n      aadhar: '',\n      gender: null\n    };\n  }\n  myTextHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    alert(val);\n    if (val.toUpperCase === \"MR\") {\n        this.setState({\n          gender: true \n        });\n    }\n  }\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    if (nam === \"age\") {\n      if (!Number(val)) {\n        alert(\"Your age must be a number\");\n      }\n    }\n    this.setState({[nam]: val});\n    this.setState({[nam]: 10});\n  }\n  mydobHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    var today = new Date();\n    var birthDate = new Date(val);\n    var age1 = today.getFullYear() - birthDate.getFullYear();\n    this.setState({\n      age: age1 \n    });\n  }\n   mySubmitHandler = (event) => {\n    event.preventDefault();\n    alert(\"You are submitting \" + this.state.username);\n  }\n  render() {\n    return (\n      <form onSubmit={this.mySubmitHandler}>\n      <fieldset>\n      <legend>Personal information:</legend>\n      <h1>Hello {this.state.username} {this.state.age}</h1>\n      \n      <p>Enter your name:</p>\n      <input type=\"text\" name=\"salutation\" maxlength=\"4\" size=\"4\" onChange={this.myTextHandler}/> \n      <input\n        type='text'\n        name='username'\n        onChange={this.myChangeHandler}\n      />\n      <p>Gender:</p>\n      <input type=\"radio\" name=\"gender\" value=\"male\" checked={this.state.gender}/> Male\n      <input type=\"radio\" name=\"gender\" value=\"female\"/> Female\n      <p>Enter your DOB:</p>\n      <input\n        type='date'\n        name='bday'\n        onChange={this.mydobHandler}\n      />\n      <p>Enter your age:</p>\n      <input\n        type='text'\n        name='age'\n        onChange={this.myChangeHandler}\n        value={this.state.age}\n        readOnly={true}\n      />\n      <p>Enter your AppoinmentDate:</p>\n      <input\n        type='date'\n        name='appointmentdate'\n      />\n      <p>Enter your AadharNumber:</p>\n      <input\n        type='text'\n        name='aadhar'\n        value={this.state.aadhar}\n      />\n      <input\n        type='submit'\n      />\n      </fieldset>\n      </form>\n    );\n  }\n}\n\nReactDOM.render(<MyForm />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}